;======================GAME DESCRIPTION=========================================
;Стиль игры - Hero Fighting с элементами прокачки героя
;В игре присутствует некое разнообразие характеристик:
;	Сила атаки(Atack)	- влияет на силу удара героя
;	Ловкость(Dexterity)	- влияет на вероятность уклонения от удара врага
;	Защита(Defence)		- влияет на поглощение части удара от врага
;	Выносливость(Stamina)	- влияет на количество здоровья
;	Точность(Accuracy)	- влияет на шанс нанести удвоенный урон
;По началу каждый бой будет проходить с полным кол-вом здоровья у всех
;Так же ваш герой будет ходить всегда первым(возможно потом это изменится)
;
;При повышении уровня дается несколько очков, которые можно вложить по своему
;усмотрению в любую из характеристик
;
;Количество опыта требуемое для каждого следующего уровня выше и выше
;Чем слабее противник, тем меньше опыта получает ваш герой
;
;Количество здоровья напрямую зависит от количества Выносливости
;1 ед. Выносливости = 10 ед. здоровья							    V
;							|  1  |  2  |  3  |   4  |...|  10  !  11  |...|  50  |
;У Ловкости и Точности зависимость тоже прямолинейная	| 2,5 |  5  | 7,5 |  10  |   |  30  !  31  |...|  70  |
;Справа приведена таблица, где в верхней строчке количество ловкости/точности
;а в нижней строчке - полученное количество процентов уклонения или вероятности крита
;Заметьте, что выше 50-ти единиц поднять эти характеристики нельзя
;
;Количество урона которое вы могли бы нанести противнику равняется
;количеству единиц Силы атаки, однако стоит помнить, что чистый урон
;будет только после отражения частью вашего урона броней противника
;
;Защита позволяет получать не весь урон, наносимый противником
;Количество входящего урона = сила атаки противника - ваша защита
;НО!!! Количество входящего дамага не может быть меньше 5-ти единиц
;исключая случаи промахов. Удвоение урона происходит ДО порезки броней
;======================EXTERNS==================================================
extern	__imp__GetStdHandle@4
extern	__imp__SetConsoleMode@8

extern	__imp__SetConsoleCursorPosition@8
extern	__imp__WriteConsoleA@20
extern	__imp__wsprintfA

extern	__imp__Sleep@4
extern	__imp__GetAsyncKeyState@4

extern	__imp__ExitProcess@4
;=======================SECTION BSS=============================================
section .bss
	written		resb 1							;number of chars written after WriteConsoleA
	buffer		resb 255
	stdin		resd 1							;STD_INPUT_HANDLE
	stdout		resd 1							;STD_OUTPUT_HANDLE
	console_coord	resd 1							;coord for cursor

	stat_atk	resd 1
	stat_dex	resd 1
	stat_def	resd 1
	stat_sta	resd 1
	stat_acc	resd 1

;=======================MAIN CODE SECTION=======================================
section .text
	global	_main
;-------------------------------------------------------------------------------
_main:
	call	init_stdin_stdout
	call	set_startup_features
	call	init_main_window
	jmp	main_window_loop
;-------------------------------------------------------------------------------
init_stdin_stdout:

	push dword -10
	call [__imp__GetStdHandle@4]
	mov [stdin], eax

	push dword 8h
	push dword [stdin]
	call [__imp__SetConsoleMode@8]

	push dword -11
	call [__imp__GetStdHandle@4]
	mov [stdout], eax

	ret
;-------------------------------------------------------------------------------
set_startup_features:
	xor	ax, ax
	mov	[stat_acc], ax
	mov	[stat_dex], ax
	add	ax, 2
	mov	[stat_sta], ax
	add	ax, 8
	mov	[stat_atk], ax
	mov	[stat_def], ax
	ret
;-------------------------------------------------------------------------------
main_window_loop:
	push	10
	call	[__imp__Sleep@4]
	xor	eax, eax

	push	46h								;compare on press Fight
	call	[__imp__GetAsyncKeyState@4]
	cmp	eax, 4294934529
	je	exit			;<------------------------------remove

	push	53h								;compare on press Stat
	call	[__imp__GetAsyncKeyState@4]
	cmp	eax, 4294934529
	je	stat_window_init

	push	45h								;compare on press Exit
	call	[__imp__GetAsyncKeyState@4]
	cmp	eax, 4294934529
	je	exit

	push	48h								;compare on press HELP
	call	[__imp__GetAsyncKeyState@4]
	cmp	eax, 4294934529
	je	help_window_init

jmp	main_window_loop
;-------------------------------------------------------------------------------
stat_window_init:
	xor	ax, ax
	add	ax, 0
	xor	cx, cx
	add	cx, 0
	call	move_cursor

	mov	ecx, 1
	mov	eax, 42
	stat_window_loop_1:
	pushad
	call	choose_tab_2
	call	add_string_to_buffer
	call	print_line
	call	print_end_line
	popad
	add	ecx, 1
	cmp	ecx, 7
	 jl	stat_window_loop_1

	stat_window_loop_2:
	pushad
	push	empty_line
	call	add_string_to_buffer
	call	print_line
	call	print_end_line
	popad
	add	ecx, 1
	cmp	ecx, 25
	 jl	stat_window_loop_2

	xor	ax, ax
	add	ax, 0
	xor	cx, cx
	add	cx, 8
	call	move_cursor

	mov	ecx, 1
	mov	eax, 42
	stat_window_loop_3:
	pushad
	cmp	ecx, 1
	 je	print_stat_1
	cmp	ecx, 2
	 je	print_stat_2
	cmp	ecx, 3
	 je	print_stat_3
	cmp	ecx, 4
	 je	print_stat_4

	push	stat_dex_line
	jmp	end_print_stat
	print_stat_1:
	push	stat_atk_line
	jmp	end_print_stat
	print_stat_2:
	push	stat_def_line
	jmp	end_print_stat
	print_stat_3:
	push	stat_sta_line
	jmp	end_print_stat
	print_stat_4:
	push	stat_acc_line

	end_print_stat:
	call	add_string_to_buffer
	call	print_line

	popad
	pushad

	cmp	ecx, 1
	 je	print_stat_01
	cmp	ecx, 2
	 je	print_stat_02
	cmp	ecx, 3
	 je	print_stat_03
	cmp	ecx, 4
	 je	print_stat_04

	mov	esi, [stat_dex]
	jmp	end_print_stat_num
	print_stat_01:
	mov	esi, [stat_atk]
	jmp	end_print_stat_num
	print_stat_02:
	mov	esi, [stat_def]
	jmp	end_print_stat_num
	print_stat_03:
	mov	esi, [stat_sta]
	jmp	end_print_stat_num
	print_stat_04:
	mov	esi, [stat_acc]

	end_print_stat_num:
	push	esi
	call	add_num_to_buffer
	mov	eax, 3
	call	print_line

	call	print_end_line
	popad
	add	ecx, 1
	cmp	ecx, 6
	 jl	stat_window_loop_3

	call	print_end_line

	xor	eax, eax
	add	eax, 42
	push	help_line_8
	call	add_string_to_buffer
	call	print_line

	jmp	stat_window_loop;
;-------------------------------------------------------------------------------
stat_window_loop:
	push	10
	call	[__imp__Sleep@4]
	xor	eax, eax

	push	1Bh								;compare on press Esc
	call	[__imp__GetAsyncKeyState@4]
	cmp	eax, 4294934529
	je	stat_exit

	jmp	stat_window_loop
stat_exit:
	call	init_main_window
	jmp	main_window_loop
;-------------------------------------------------------------------------------
help_window_init:
	xor	ax, ax
	add	ax, 0
	xor	cx, cx
	add	cx, 0
	call	move_cursor

	mov	eax, 42
	mov	ecx, 1
help_window_init_loop:
	pushad
	cmp	ecx, 1
	 je	help_str_line_1
	cmp	ecx, 2
	 je	help_str_line_2
	cmp	ecx, 3
	 je	help_str_line_3
	cmp	ecx, 4
	 je	help_str_line_empty
	cmp	ecx, 5
	 je	help_str_line_4
	cmp	ecx, 6
	 je	help_str_line_5
	cmp	ecx, 7
	 je	help_str_line_empty
	cmp	ecx, 8
	 je	help_str_line_6
	cmp	ecx, 9
	 je	help_str_line_7
	cmp	ecx, 10
	 je	help_str_line_empty
	cmp	ecx, 11
	 jg	help_str_line_empty

	push	help_line_8
	jmp	help_str_chosen
	help_str_line_1:
	push	help_line_1
	jmp	help_str_chosen
	help_str_line_2:
	push	help_line_2
	jmp	help_str_chosen
	help_str_line_3:
	push	help_line_3
	jmp	help_str_chosen
	help_str_line_4:
	push	help_line_4
	jmp	help_str_chosen
	help_str_line_5:
	push	help_line_5
	jmp	help_str_chosen
	help_str_line_6:
	push	help_line_6
	jmp	help_str_chosen
	help_str_line_7:
	push	help_line_7
	jmp	help_str_chosen
	help_str_line_empty:
	push	empty_line

	help_str_chosen:
	call	add_string_to_buffer
	call	print_line
	call	print_end_line
	popad
	add	ecx, 1
	cmp	ecx, 25
	 jl	help_window_init_loop

	jmp	help_window_loop
;-------------------------------------------------------------------------------
help_window_loop:
	push	10
	call	[__imp__Sleep@4]
	xor	eax, eax

	push	1Bh								;compare on press Esc
	call	[__imp__GetAsyncKeyState@4]
	cmp	eax, 4294934529
	je	help_exit

	jmp	help_window_loop
help_exit:
	call	init_main_window
	jmp	main_window_loop
;-------------------------------------------------------------------------------
init_main_window:
	xor	ax, ax
	add	ax, 0
	xor	cx, cx
	add	cx, 0
	call	move_cursor

	mov	ecx, 1
	mov	eax, 42
	init_main_window_loop_1:
	pushad
	call	choose_tab_1
	call	add_string_to_buffer
	call	print_line
	call	print_end_line
	popad
	add	ecx, 1
	cmp	ecx, 9
	 jl	init_main_window_loop_1

	push	empty_line
	call	add_string_to_buffer
	call	print_line
	call	print_end_line

	mov	ecx, 1
	mov	eax, 42
	init_main_window_loop_2:
	pushad
	call	choose_tab_2
	call	add_string_to_buffer
	call	print_line
	call	print_end_line
	popad
	add	ecx, 1
	cmp	ecx, 7
	 jl	init_main_window_loop_2

	push	empty_line
	call	add_string_to_buffer
	call	print_line
	call	print_end_line

	mov	ecx, 1
	mov	eax, 42
	init_main_window_loop_3:
	pushad
	call	choose_tab_3
	call	add_string_to_buffer
	call	print_line
	call	print_end_line
	popad
	add	ecx, 1
	cmp	ecx, 7
	 jl	init_main_window_loop_3

	push	empty_line
	call	add_string_to_buffer
	call	print_line
	call	print_end_line

	push	help_line
	call	add_string_to_buffer
	call	print_line
	call	print_end_line
	ret
;-------------------------------------------------------------------------------
choose_tab_1:
	pop	esi
	cmp	ecx, 1
	 je	push_fight_line_1
	cmp	ecx, 2
	 je	push_fight_line_2
	cmp	ecx, 3
	 je	push_fight_line_3
	cmp	ecx, 4
	 je	push_fight_line_4
	cmp	ecx, 5
	 je	push_fight_line_5
	cmp	ecx, 6
	 je	push_fight_line_6
	cmp	ecx, 7
	 je	push_fight_line_7

	push	fight_line_8
	push	esi
	ret
	push_fight_line_1:
	push	fight_line_1
	push	esi
	ret
	push_fight_line_2:
	push	fight_line_2
	push	esi
	ret
	push_fight_line_3:
	push	fight_line_3
	push	esi
	ret
	push_fight_line_4:
	push	fight_line_4
	push	esi
	ret
	push_fight_line_5:
	push	fight_line_5
	push	esi
	ret
	push_fight_line_6:
	push	fight_line_6
	push	esi
	ret
	push_fight_line_7:
	push	fight_line_7
	push	esi
	ret
;-------------------------------------------------------------------------------
choose_tab_2:
	pop	esi
	cmp	ecx, 1
	 je	push_stat_line_1
	cmp	ecx, 2
	 je	push_stat_line_2
	cmp	ecx, 3
	 je	push_stat_line_3
	cmp	ecx, 4
	 je	push_stat_line_4
	cmp	ecx, 5
	 je	push_stat_line_5

	push	stat_line_6
	push	esi
	ret
	push_stat_line_1:
	push	stat_line_1
	push	esi
	ret
	push_stat_line_2:
	push	stat_line_2
	push	esi
	ret
	push_stat_line_3:
	push	stat_line_3
	push	esi
	ret
	push_stat_line_4:
	push	stat_line_4
	push	esi
	ret
	push_stat_line_5:
	push	stat_line_5
	push	esi
	ret
;-------------------------------------------------------------------------------
choose_tab_3:
	pop	esi
	cmp	ecx, 1
	 je	push_exit_line_1
	cmp	ecx, 2
	 je	push_exit_line_2
	cmp	ecx, 3
	 je	push_exit_line_3
	cmp	ecx, 4
	 je	push_exit_line_4
	cmp	ecx, 5
	 je	push_exit_line_5

	push	exit_line_6
	push	esi
	ret
	push_exit_line_1:
	push	exit_line_1
	push	esi
	ret
	push_exit_line_2:
	push	exit_line_2
	push	esi
	ret
	push_exit_line_3:
	push	exit_line_3
	push	esi
	ret
	push_exit_line_4:
	push	exit_line_4
	push	esi
	ret
	push_exit_line_5:
	push	exit_line_5
	push	esi
	ret
;-------------------------------------------------------------------------------
move_cursor:
	mov	[console_coord], ax						;ax = X coord
	mov	[console_coord + 2], cx						;cx = Y coord
	push	dword [console_coord]
	push	dword [stdout]
	call	[__imp__SetConsoleCursorPosition@8]
	ret
;-------------------------------------------------------------------------------
add_string_to_buffer:
	pop	esi								;ret in stack
	push	sformat
	push	buffer
	call	[__imp__wsprintfA]
	add	esp, 12
	push	esi
	ret
;-------------------------------------------------------------------------------
add_num_to_buffer:
	pop	esi								;ret in stack
	push	iformat
	push	buffer
	call	[__imp__wsprintfA]
	add	esp, 12
	push	esi
	ret
;-------------------------------------------------------------------------------
;example
;	xor	eax, eax
;	add	eax, 40
;	push	line
;	call	add_string_to_buffer
;	call	print_line
;-------------------------------------------------------------------------------
print_line:
	push	dword 0
	push	written
	push	dword eax							;eax contain number of char
	push	buffer
	push	dword[stdout]
	call	[__imp__WriteConsoleA@20]
	ret
;-------------------------------------------------------------------------------
print_end_line:
	push	dword 0
	push	written
	push	dword 2
	push	end_line
	push	dword[stdout]
	call	[__imp__WriteConsoleA@20]
	ret
;-------------------------------------------------------------------------------
exit:
	push	0
	call	[__imp__ExitProcess@4]
end


;=======================SECTION RDATA===========================================
section .rdata

fight_line_1	db "         ______ _       _     _           ", 0
fight_line_2	db "        |  ____(_)     | |   | |          ", 0
fight_line_3	db "        | |__   _  __ _| |__ | |_         ", 0
fight_line_4	db "        |  __| | |/ _` | '_ \| __|        ", 0
fight_line_5	db "        | |    | | (_| | | | | |_         ", 0
fight_line_6	db "        |_|    |_|\__, |_| |_|\__|        ", 0
fight_line_7	db "                   __/ |                  ", 0
fight_line_8	db "                  |___/                   ", 0

stat_line_1	db "  _____ _        _   _     _   _          ", 0
stat_line_2	db " / ____| |      | | (_)   | | (_)         ", 0
stat_line_3	db "| (___ | |_ __ _| |_ _ ___| |_ _  ___ ___ ", 0
stat_line_4	db " \___ \| __/ _` | __| / __| __| |/ __/ __|", 0
stat_line_5	db " ____) | || (_| | |_| \__ \ |_| | (__\__ \", 0
stat_line_6	db "|_____/ \__\__,_|\__|_|___/\__|_|\___|___/", 0

exit_line_1	db "            ______       _ _              ", 0
exit_line_2	db "           |  ____|     (_) |             ", 0
exit_line_3	db "           | |__  __  __| | |_            ", 0
exit_line_4	db "           |  __| \ \/ /| | __|           ", 0
exit_line_5	db "           | |____ >  < | | |_            ", 0
exit_line_6	db "           |______/_/\_\|_|\__|           ", 0

help_line	db "Press H to open HELP window               ", 0

help_line_1	db "At the start, you have a hero with startup", 0
help_line_2	db "features, that you may look at Statistics ", 0
help_line_3	db "(Press S at Main Window (MainW at future))", 0
help_line_4	db "When you are ready to fight with computer ", 0
help_line_5	db "go to the tab 'Fight' (Press F at MainW)  ", 0
help_line_6	db "Anyway, if you are tired about that game, ", 0
help_line_7	db "you can leave it(Press E at MainW to Exit)", 0
help_line_8	db "If you ready to play game, press Esc here ", 0

empty_line	db "                                          ", 0		;42 char

enemy_line_01	db "                     __       ", 0
enemy_line_02	db "                    /  \      ", 0
enemy_line_03	db "                  _/=Ll=\_    ", 0
enemy_line_04	db " |\              [________]   ", 0
enemy_line_05	db "  \\              ||/''\||    ", 0
enemy_line_06	db "   \\             ( 0..0 )    ", 0
enemy_line_07	db "    \\             \_--_/     ", 0
enemy_line_08	db "     \\       __.-[\!--!/]-.  ", 0
enemy_line_09	db "      \\  _.-'    \      /  \ ", 0
enemy_line_10	db "       \\-|   __.-|'----' ,_ \", 0
enemy_line_11	db "      otset~''    |      |/  /", 0
enemy_line_12	db "         rr       >==[]==<  / ", 0
enemy_line_13	db "          r'     /__.''.__\/  ", 0
enemy_line_14	db "                  |  __  |    ", 0
enemy_line_15	db "                  |  ||  |    ", 0
enemy_line_16	db "                  |  ||  |    ", 0
enemy_line_17	db "                  |  ||  |    ", 0
enemy_line_18	db "                  |__||__|    ", 0
enemy_line_19	db "                  [__][__]    ", 0
enemy_line_20	db "                  |_ || _|    ", 0
enemy_line_21	db "                  (__)(__)    ", 0				;32 char

hero_line_01	db "       __                     ", 0
hero_line_02	db "      /  \                    ", 0
hero_line_03	db "    _/=Ll=\_                  ", 0
hero_line_04	db "   [________]              /| ", 0
hero_line_05	db "    ||/''\||              //  ", 0
hero_line_06	db "    ( 0..0 )             //   ", 0
hero_line_07	db "     \_--_/             //    ", 0
hero_line_08	db "  .-[\!--!/]-.__       //     ", 0
hero_line_09	db " /  \      /    '-._  //      ", 0
hero_line_10	db "/ _, '----'|-.__  | -//       ", 0
hero_line_11	db "\  \|      |    ''~te3to      ", 0
hero_line_12	db " \  >==[]==<       rr         ", 0
hero_line_13	db "  \/__.''.__\     'r          ", 0
hero_line_14	db "    |  __  |                  ", 0
hero_line_15	db "    |  ||  |                  ", 0
hero_line_16	db "    |  ||  |                  ", 0
hero_line_17	db "    |  ||  |                  ", 0
hero_line_18	db "    |__||__|                  ", 0
hero_line_19	db "    [__][__]                  ", 0
hero_line_20	db "    |_ || _|                  ", 0
hero_line_21	db "    (__)(__)                  ", 0				;32 char


boss_line_01	db "      \                       /                ", 0
boss_line_02	db "      |\   \        /        /|                ", 0
boss_line_03	db "     /  \  |\__  __/|       /  \               ", 0
boss_line_04	db "    / /\ \ \ _ \/ _ /      /  ^ \              ", 0
boss_line_05	db "   / / /\ \ (*}\/{*)      /  / \ \             ", 0
boss_line_06	db "   | | | ) \( (oo) )     /  // |\ \            ", 0
boss_line_07	db "   | | | |\ \(V''V)\    /  / | || \|           ", 0
boss_line_08	db "   | | | | \ |^__^| \  /  / || || ||           ", 0
boss_line_09	db "  / / /  | |\ WWWW__ \/  /| || || ||           ", 0
boss_line_10	db " | | | | | | \_______\  / / || || ||           ", 0
boss_line_11	db " | | | / | | )|______\ ) | / | || ||           ", 0
boss_line_12	db " / / /  / /  /______/   /| \ \ || ||           ", 0
boss_line_13	db "/ / /  / /  /\_____/  |/ /__\ \ \ \ \          ", 0
boss_line_14	db "| | | / /  /\______/    \   \__| \ \ \         ", 0
boss_line_15	db "| | | | | |\______ __    \_    \__|_| \        ", 0
boss_line_16	db "| | |___ /\______ /  \     \_       \  |       ", 0
boss_line_17	db "| |/    /\_______/    \      \__     \ |    /\ ", 0
boss_line_18	db "|/ |   |\_______|      |        \___  \ |__/  \", 0
boss_line_19	db "/  |   |\_______|      |            \___/     |", 0
boss_line_20	db "   |   |\_______|      |                    __/", 0
boss_line_21	db "    \   \________\_    _\               ____/  ", 0
boss_line_22	db "  __/   /\________/   /   )\__      _____/     ", 0
boss_line_23	db " /  __ /  \uuuu/  __ /___]    \______/         ", 0
boss_line_24	db " VVV  V        VVV  V                          ", 0		;49 char

stat_atk_line	db "1) Atack:     ", 0						;14 char
stat_def_line	db "2) Defence:   ", 0
stat_sta_line	db "3) Stamina:   ", 0
stat_acc_line	db "4) Accuracy:  ", 0
stat_dex_line	db "5) Dexterity: ", 0

stat_crit	db "Your chance to crit is: ", 0				;24 char
stat_dodge	db "Your chance to dodge is: ", 0				;25 char

iformat		db "%i", 0
sformat		db "%s", 0
end_line	db 0Dh, 0Ah, 0							;\r + \n